AWSTemplateFormatVersion: '2010-09-09'
Description: 'lambda: Codebuild project which is used by the Serverless Agent for Buildkite, a @wolfeidau template'
Parameters:
  BuildkiteAgentPeerStack: 
    Type: String

Resources:

  BuildkiteProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        # using my custom codebuild docker image with buildkite installed along with golang
        Image: versent/codebuild-all-buildkite:1.0_201904151735
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables: 
        - Name: ARTIFACT_BUCKET_NAME
          Type: "PLAINTEXT"
          Value: 
            'Fn::ImportValue': !Sub "${BuildkiteAgentPeerStack}-ArtifactBucket"
      ServiceRole: !Ref BuildkiteCodeBuildRole
      Cache:
        Type: LOCAL
        Modes: # You can specify one or more cache mode, 
          - LOCAL_DOCKER_LAYER_CACHE
      Source:
        Type: NO_SOURCE
        BuildSpec: "\nversion: 0.2\n\nphases:\n  install:\n    commands:\n      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay\u0026\n      - timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"\n  pre_build:\n    commands:\n      - aws ssm get-parameters --names \"/${ENVIRONMENT_NAME}/${ENVIRONMENT_NUMBER}/buildkite-ssh-key\" --with-decryption --output text --query 'Parameters[0].Value' \u003e ~/.ssh/id_rsa\n      - chmod 600 ~/.ssh/id_rsa\n  build:\n    commands:\n      - echo Build started on $(date)\n      - /opt/buildkite/buildkite-agent bootstrap --build-path ${CODEBUILD_SRC_DIR} --bin-path /opt/buildkite\n  post_build:\n    commands:\n      - echo Build completed on $(date)\n"
      Tags:
        - Key: EnvironmentName
          Value: 
            'Fn::ImportValue': !Sub "${BuildkiteAgentPeerStack}-EnvironmentName"

  BuildkiteCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: BuildkiteSSMAccess
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: 'ssm:DescribeParameters'
            Resource:
            - '*'
          - Effect: Allow
            Action: 
            - 'ssm:GetParameters'
            - 'ssm:GetParameter'
            Resource:
            - 'Fn::Sub':
              - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvironmentName}/*"
              - EnvironmentName:
                  'Fn::ImportValue': !Sub "${BuildkiteAgentPeerStack}-EnvironmentName"
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
          - Effect: Allow
            Action:
            - 's3:ListAllMyBuckets'
            Resource:
            - '*'
          - Effect: Allow
            Action:
            - s3:ListBucket
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Resource:
            - 'Fn::Sub': 
              - "arn:aws:s3:::${ArtifactBucket}/*"
              - ArtifactBucket: 
                  'Fn::ImportValue': !Sub "${BuildkiteAgentPeerStack}-ArtifactBucket"
            - 'Fn::Sub': 
              - "arn:aws:s3:::${ArtifactBucket}"
              - ArtifactBucket: 
                  'Fn::ImportValue': !Sub "${BuildkiteAgentPeerStack}-ArtifactBucket"

Outputs:
  BuildkiteProject:
    Value: !Ref BuildkiteProject
    Export:
      Name: !Sub "${AWS::StackName}-BuildkiteProject"
